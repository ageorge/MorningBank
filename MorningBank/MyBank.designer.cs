#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MorningBank
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyBank")]
	public partial class MyBankDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLoan(Loan instance);
    partial void UpdateLoan(Loan instance);
    partial void DeleteLoan(Loan instance);
    #endregion
		
		public MyBankDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MYBANK"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyBankDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyBankDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyBankDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyBankDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SavingAccount> SavingAccounts
		{
			get
			{
				return this.GetTable<SavingAccount>();
			}
		}
		
		public System.Data.Linq.Table<CheckingAccount> CheckingAccounts
		{
			get
			{
				return this.GetTable<CheckingAccount>();
			}
		}
		
		public System.Data.Linq.Table<TransactionHistory> TransactionHistories
		{
			get
			{
				return this.GetTable<TransactionHistory>();
			}
		}
		
		public System.Data.Linq.Table<TransactionType> TransactionTypes
		{
			get
			{
				return this.GetTable<TransactionType>();
			}
		}
		
		public System.Data.Linq.Table<BillPayment> BillPayments
		{
			get
			{
				return this.GetTable<BillPayment>();
			}
		}
		
		public System.Data.Linq.Table<Loan> Loans
		{
			get
			{
				return this.GetTable<Loan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SavingAccounts")]
	public partial class SavingAccount
	{
		
		private string _Username;
		
		private System.Nullable<long> _SavingAccountNumber;
		
		private System.Nullable<decimal> _Balance;
		
		public SavingAccount()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingAccountNumber", DbType="BigInt")]
		public System.Nullable<long> SavingAccountNumber
		{
			get
			{
				return this._SavingAccountNumber;
			}
			set
			{
				if ((this._SavingAccountNumber != value))
				{
					this._SavingAccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Money")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckingAccounts")]
	public partial class CheckingAccount
	{
		
		private string _Username;
		
		private System.Nullable<long> _CheckingAccountNumber;
		
		private System.Nullable<decimal> _Balance;
		
		public CheckingAccount()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckingAccountNumber", DbType="BigInt")]
		public System.Nullable<long> CheckingAccountNumber
		{
			get
			{
				return this._CheckingAccountNumber;
			}
			set
			{
				if ((this._CheckingAccountNumber != value))
				{
					this._CheckingAccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Money")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionHistories")]
	public partial class TransactionHistory
	{
		
		private System.Nullable<long> _TransactionId;
		
		private System.Nullable<System.DateTime> _TransactionDate;
		
		private System.Nullable<long> _CheckingAccountNumber;
		
		private System.Nullable<long> _SavingAccountNumber;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _TransactionFee;
		
		private System.Nullable<long> _TransactionTypeId;
		
		public TransactionHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="BigInt")]
		public System.Nullable<long> TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this._TransactionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this._TransactionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckingAccountNumber", DbType="BigInt")]
		public System.Nullable<long> CheckingAccountNumber
		{
			get
			{
				return this._CheckingAccountNumber;
			}
			set
			{
				if ((this._CheckingAccountNumber != value))
				{
					this._CheckingAccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingAccountNumber", DbType="BigInt")]
		public System.Nullable<long> SavingAccountNumber
		{
			get
			{
				return this._SavingAccountNumber;
			}
			set
			{
				if ((this._SavingAccountNumber != value))
				{
					this._SavingAccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionFee", DbType="Money")]
		public System.Nullable<decimal> TransactionFee
		{
			get
			{
				return this._TransactionFee;
			}
			set
			{
				if ((this._TransactionFee != value))
				{
					this._TransactionFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeId", DbType="BigInt")]
		public System.Nullable<long> TransactionTypeId
		{
			get
			{
				return this._TransactionTypeId;
			}
			set
			{
				if ((this._TransactionTypeId != value))
				{
					this._TransactionTypeId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionType")]
	public partial class TransactionType
	{
		
		private System.Nullable<long> _TransactionTypeId;
		
		private string _TransactionTypeName;
		
		public TransactionType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeId", DbType="BigInt")]
		public System.Nullable<long> TransactionTypeId
		{
			get
			{
				return this._TransactionTypeId;
			}
			set
			{
				if ((this._TransactionTypeId != value))
				{
					this._TransactionTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeName", DbType="NChar(50)")]
		public string TransactionTypeName
		{
			get
			{
				return this._TransactionTypeName;
			}
			set
			{
				if ((this._TransactionTypeName != value))
				{
					this._TransactionTypeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillPayment")]
	public partial class BillPayment
	{
		
		private int _BillID;
		
		private string _BillName;
		
		private string _Username;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private string _Status;
		
		public BillPayment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillID", DbType="Int NOT NULL")]
		public int BillID
		{
			get
			{
				return this._BillID;
			}
			set
			{
				if ((this._BillID != value))
				{
					this._BillID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillName", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string BillName
		{
			get
			{
				return this._BillName;
			}
			set
			{
				if ((this._BillName != value))
				{
					this._BillName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this._DueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NChar(10)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loan")]
	public partial class Loan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanId;
		
		private string _LoanName;
		
		private System.Nullable<decimal> _LoanAmt;
		
		private string _UserName;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanIdChanging(int value);
    partial void OnLoanIdChanged();
    partial void OnLoanNameChanging(string value);
    partial void OnLoanNameChanged();
    partial void OnLoanAmtChanging(System.Nullable<decimal> value);
    partial void OnLoanAmtChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Loan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanName", DbType="VarChar(50)")]
		public string LoanName
		{
			get
			{
				return this._LoanName;
			}
			set
			{
				if ((this._LoanName != value))
				{
					this.OnLoanNameChanging(value);
					this.SendPropertyChanging();
					this._LoanName = value;
					this.SendPropertyChanged("LoanName");
					this.OnLoanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmt", DbType="Money")]
		public System.Nullable<decimal> LoanAmt
		{
			get
			{
				return this._LoanAmt;
			}
			set
			{
				if ((this._LoanAmt != value))
				{
					this.OnLoanAmtChanging(value);
					this.SendPropertyChanging();
					this._LoanAmt = value;
					this.SendPropertyChanged("LoanAmt");
					this.OnLoanAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
